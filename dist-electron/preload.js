"use strict";const r=require("electron");require("path");require("fs");const t=require("crypto");require("iconv-lite");function s(e){return Buffer.from(e).toString("base64")}window.addEventListener("DOMContentLoaded",()=>{const e=(o,n)=>{const i=document.getElementById(o);i&&(i.innerText=n)};for(const o of["chrome","node","electron"])e(`${o}-version`,process.versions[o])});r.contextBridge.exposeInMainWorld("electronCrypto",{getRandomValues:e=>t.getRandomValues(e),randomUUID:()=>t.randomUUID()});r.contextBridge.exposeInMainWorld("electronAPI",{saveVideo:e=>r.ipcRenderer.invoke("save-video-blob",e),removeAllListeners:e=>{r.ipcRenderer.removeAllListeners(e)},showSaveDialog:e=>r.ipcRenderer.invoke("show-save-dialog",e),selectDirectory:()=>r.ipcRenderer.invoke("select-directory"),openFile:e=>r.ipcRenderer.invoke("open-file",e),onProgress:e=>(r.ipcRenderer.on("merge-progress",(o,n)=>e(n)),()=>r.ipcRenderer.removeAllListeners("merge-progress")),mergeMedia:e=>r.ipcRenderer.invoke("merge-media",e),composeVideo:e=>r.ipcRenderer.invoke("compose-video",e),text2voice:(e,o)=>r.ipcRenderer.invoke("text2voice",s(JSON.stringify({options:e,outputDir:o})))});
//# sourceMappingURL=preload.js.map
